//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/SPlayerController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SPlayerController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SPlayerController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SPlayerController"",
    ""maps"": [
        {
            ""name"": ""SGamePlay"",
            ""id"": ""c91cc503-c0bf-494f-be62-4a88be32730d"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8bbf8308-1d06-45f8-be5c-25c0a9962585"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cursor"",
                    ""type"": ""PassThrough"",
                    ""id"": ""76090a08-d9d5-4e29-908f-636ee8818f66"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""64298a58-6eb3-4194-b675-2c7ce2c32967"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RunPressed"",
                    ""type"": ""Button"",
                    ""id"": ""dee10b97-d1c7-4025-a415-c9b07688325e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DashPressed"",
                    ""type"": ""Button"",
                    ""id"": ""e79900ee-d478-4719-9928-95f4c8576c82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirePressed"",
                    ""type"": ""Button"",
                    ""id"": ""d9251945-ae55-4828-a7f7-671c49dabfd0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TalentOne"",
                    ""type"": ""Button"",
                    ""id"": ""870d7650-830f-4952-b061-aa66f629bf16"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Talentsecond"",
                    ""type"": ""Button"",
                    ""id"": ""378124b5-27ee-4f62-99ab-e09bca90d956"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Talentthird"",
                    ""type"": ""Button"",
                    ""id"": ""9393a125-a1e1-4791-b827-1cf78b1786a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TalentFourth"",
                    ""type"": ""Button"",
                    ""id"": ""c6b656dd-e774-4c35-9661-3eb24071e434"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c6c29f2e-5a3d-4b26-8c1b-523fe01a4c49"",
                    ""path"": ""<HID::MY-POWER CO.,LTD. Game Controller for PC>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e034d292-7c94-4392-92ef-15e794143ace"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9d00b54-4efa-4b93-acb4-2865e2d4b236"",
                    ""path"": ""<HID::DragonRise Inc.   Generic   USB  Joystick  >/button3"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de0e1fc7-dda4-47f9-9bc7-43ca37b2ef06"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RunPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3726cbaf-d275-4f68-8f1c-927eace888ac"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""344ad884-6773-4585-84ed-abbcbd9522ea"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirePressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5470f33f-7142-4960-a3be-07817cc91070"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TalentOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a1c1edc-444b-4496-9ead-4a7206220185"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Talentsecond"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c7d3927-cabc-4ed5-9856-feec0db87fca"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Talentthird"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fa4d1bf-0ebe-4e8e-be1b-b8d465a7e85e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TalentFourth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // SGamePlay
        m_SGamePlay = asset.FindActionMap("SGamePlay", throwIfNotFound: true);
        m_SGamePlay_Move = m_SGamePlay.FindAction("Move", throwIfNotFound: true);
        m_SGamePlay_Cursor = m_SGamePlay.FindAction("Cursor", throwIfNotFound: true);
        m_SGamePlay_jump = m_SGamePlay.FindAction("jump", throwIfNotFound: true);
        m_SGamePlay_RunPressed = m_SGamePlay.FindAction("RunPressed", throwIfNotFound: true);
        m_SGamePlay_DashPressed = m_SGamePlay.FindAction("DashPressed", throwIfNotFound: true);
        m_SGamePlay_FirePressed = m_SGamePlay.FindAction("FirePressed", throwIfNotFound: true);
        m_SGamePlay_TalentOne = m_SGamePlay.FindAction("TalentOne", throwIfNotFound: true);
        m_SGamePlay_Talentsecond = m_SGamePlay.FindAction("Talentsecond", throwIfNotFound: true);
        m_SGamePlay_Talentthird = m_SGamePlay.FindAction("Talentthird", throwIfNotFound: true);
        m_SGamePlay_TalentFourth = m_SGamePlay.FindAction("TalentFourth", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // SGamePlay
    private readonly InputActionMap m_SGamePlay;
    private ISGamePlayActions m_SGamePlayActionsCallbackInterface;
    private readonly InputAction m_SGamePlay_Move;
    private readonly InputAction m_SGamePlay_Cursor;
    private readonly InputAction m_SGamePlay_jump;
    private readonly InputAction m_SGamePlay_RunPressed;
    private readonly InputAction m_SGamePlay_DashPressed;
    private readonly InputAction m_SGamePlay_FirePressed;
    private readonly InputAction m_SGamePlay_TalentOne;
    private readonly InputAction m_SGamePlay_Talentsecond;
    private readonly InputAction m_SGamePlay_Talentthird;
    private readonly InputAction m_SGamePlay_TalentFourth;
    public struct SGamePlayActions
    {
        private @SPlayerController m_Wrapper;
        public SGamePlayActions(@SPlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_SGamePlay_Move;
        public InputAction @Cursor => m_Wrapper.m_SGamePlay_Cursor;
        public InputAction @jump => m_Wrapper.m_SGamePlay_jump;
        public InputAction @RunPressed => m_Wrapper.m_SGamePlay_RunPressed;
        public InputAction @DashPressed => m_Wrapper.m_SGamePlay_DashPressed;
        public InputAction @FirePressed => m_Wrapper.m_SGamePlay_FirePressed;
        public InputAction @TalentOne => m_Wrapper.m_SGamePlay_TalentOne;
        public InputAction @Talentsecond => m_Wrapper.m_SGamePlay_Talentsecond;
        public InputAction @Talentthird => m_Wrapper.m_SGamePlay_Talentthird;
        public InputAction @TalentFourth => m_Wrapper.m_SGamePlay_TalentFourth;
        public InputActionMap Get() { return m_Wrapper.m_SGamePlay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SGamePlayActions set) { return set.Get(); }
        public void SetCallbacks(ISGamePlayActions instance)
        {
            if (m_Wrapper.m_SGamePlayActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnMove;
                @Cursor.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnCursor;
                @Cursor.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnCursor;
                @Cursor.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnCursor;
                @jump.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnJump;
                @jump.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnJump;
                @jump.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnJump;
                @RunPressed.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnRunPressed;
                @RunPressed.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnRunPressed;
                @RunPressed.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnRunPressed;
                @DashPressed.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnDashPressed;
                @DashPressed.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnDashPressed;
                @DashPressed.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnDashPressed;
                @FirePressed.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnFirePressed;
                @FirePressed.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnFirePressed;
                @FirePressed.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnFirePressed;
                @TalentOne.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentOne;
                @TalentOne.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentOne;
                @TalentOne.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentOne;
                @Talentsecond.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentsecond;
                @Talentsecond.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentsecond;
                @Talentsecond.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentsecond;
                @Talentthird.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentthird;
                @Talentthird.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentthird;
                @Talentthird.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentthird;
                @TalentFourth.started -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentFourth;
                @TalentFourth.performed -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentFourth;
                @TalentFourth.canceled -= m_Wrapper.m_SGamePlayActionsCallbackInterface.OnTalentFourth;
            }
            m_Wrapper.m_SGamePlayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Cursor.started += instance.OnCursor;
                @Cursor.performed += instance.OnCursor;
                @Cursor.canceled += instance.OnCursor;
                @jump.started += instance.OnJump;
                @jump.performed += instance.OnJump;
                @jump.canceled += instance.OnJump;
                @RunPressed.started += instance.OnRunPressed;
                @RunPressed.performed += instance.OnRunPressed;
                @RunPressed.canceled += instance.OnRunPressed;
                @DashPressed.started += instance.OnDashPressed;
                @DashPressed.performed += instance.OnDashPressed;
                @DashPressed.canceled += instance.OnDashPressed;
                @FirePressed.started += instance.OnFirePressed;
                @FirePressed.performed += instance.OnFirePressed;
                @FirePressed.canceled += instance.OnFirePressed;
                @TalentOne.started += instance.OnTalentOne;
                @TalentOne.performed += instance.OnTalentOne;
                @TalentOne.canceled += instance.OnTalentOne;
                @Talentsecond.started += instance.OnTalentsecond;
                @Talentsecond.performed += instance.OnTalentsecond;
                @Talentsecond.canceled += instance.OnTalentsecond;
                @Talentthird.started += instance.OnTalentthird;
                @Talentthird.performed += instance.OnTalentthird;
                @Talentthird.canceled += instance.OnTalentthird;
                @TalentFourth.started += instance.OnTalentFourth;
                @TalentFourth.performed += instance.OnTalentFourth;
                @TalentFourth.canceled += instance.OnTalentFourth;
            }
        }
    }
    public SGamePlayActions @SGamePlay => new SGamePlayActions(this);
    public interface ISGamePlayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnCursor(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRunPressed(InputAction.CallbackContext context);
        void OnDashPressed(InputAction.CallbackContext context);
        void OnFirePressed(InputAction.CallbackContext context);
        void OnTalentOne(InputAction.CallbackContext context);
        void OnTalentsecond(InputAction.CallbackContext context);
        void OnTalentthird(InputAction.CallbackContext context);
        void OnTalentFourth(InputAction.CallbackContext context);
    }
}
